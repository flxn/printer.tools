---
import Layout from '../../layouts/Layout.astro';
import FavoriteButton from '../../components/FavoriteButton.jsx';
import { resources } from '../../data/resources.js';

export async function getStaticPaths() {
  return resources.map(resource => ({
    params: { slug: resource.slug },
    props: { resource }
  }));
}

const { resource } = Astro.props;

// Try to import the markdown content dynamically
let content = null;
try {
  const markdownFiles = await Astro.glob('../../content/**/*.md');
  content = markdownFiles.find(md => md.file.includes(resource.slug));
} catch (error) {
  console.log(`No markdown content found for ${resource.slug}`);
}

// SEO props for this tool
const seoProps = {
  title: `${resource.name} - ${resource.category} Tool`,
  description: resource.description.length > 160 
    ? resource.description.substring(0, 157) + "..."
    : resource.description,
  keywords: [
    resource.name.toLowerCase(),
    resource.category.toLowerCase(),
    ...resource.tags.map(tag => tag.toLowerCase()),
    ...resource.platforms.map(platform => platform.toLowerCase()),
    "3D printing",
    "3D printer tools"
  ],
  image: resource.screenshot || resource.icon || "/icons/social-preview.png",
  article: true
};
---

<Layout {...seoProps}>
  <div class="container mx-auto px-6 py-8">
    {/* Back Button */}
    <div class="mb-6">
      <a 
        href="/" 
        class="inline-flex items-center text-gray-600 hover:text-blue-600 transition-colors text-sm"
      >
        <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
        Back to Resources
      </a>
    </div>

    {/* Hero Section */}
    <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-200 mb-6">
      <div class="flex flex-col md:flex-row items-start gap-6">
        {/* Icon */}
        <div class="flex-shrink-0">
          <div class="w-16 h-16 bg-gray-100 rounded-lg flex items-center justify-center">
            {resource.icon ? (
              <img 
                src={resource.icon} 
                alt={resource.name} 
                class="w-12 h-12 object-contain" 
              />
            ) : (
              <div class="w-12 h-12 bg-gray-600 rounded-lg flex items-center justify-center text-white font-bold text-xl">
                {resource.name.charAt(0)}
              </div>
            )}
          </div>
        </div>

        {/* Content */}
        <div class="flex-grow">
          <div class="flex items-start justify-between mb-3">
            <div>
              <h1 class="text-2xl md:text-3xl font-bold text-gray-900 mb-1">
                {resource.name}
              </h1>
              <span class="inline-block px-2 py-1 bg-blue-100 text-blue-700 rounded-md text-xs font-medium">
                {resource.category}
              </span>
            </div>
            <div class="text-right">
              <div class={`text-base font-bold ${resource.price === 'Free' ? 'text-green-600' : 'text-gray-700'}`}>
                {resource.price}
              </div>
            </div>
          </div>
          
          <p class="text-base text-gray-600 mb-4">
            {resource.description}
          </p>

          {/* Quick Info */}
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
            <div>
              <h3 class="text-sm font-medium text-gray-700 mb-1">Platforms</h3>
              <div class="flex flex-wrap gap-1">
                {resource.platforms.map((platform) => (
                  <span class="px-2 py-1 bg-gray-100 text-gray-700 rounded-md text-xs">
                    {platform}
                  </span>
                ))}
              </div>
            </div>
            <div>
              <h3 class="text-sm font-medium text-gray-700 mb-1">Tags</h3>
              <div class="flex flex-wrap gap-1">
                {resource.tags.map((tag) => (
                  <span class="px-2 py-1 bg-blue-50 text-blue-700 rounded-md text-xs">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
          </div>

          {/* CTA */}
          <div class="flex gap-2">
            <a 
              href={resource.website}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-md text-sm font-medium hover:bg-blue-700 transition-all"
            >
              Visit Website
              <svg class="w-3 h-3 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
              </svg>
            </a>
            <FavoriteButton resourceId={resource.id} client:load />
          </div>
        </div>
      </div>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">

    {/* Description */}

    {/* Screenshot - only show if available */}
    {resource.screenshot && (
      <div class="mb-6">
        <img 
          src={resource.screenshot} 
          alt={`${resource.name} screenshot`}
          class="w-full rounded-lg"
        />
      </div>
    )}

    {/* Detailed Content */}
    {content && (
      <div class="bg-white rounded-lg p-6 shadow-sm border border-gray-200">
        <div class="prose prose-sm max-w-none prose-headings:text-gray-900 prose-p:text-gray-700 prose-a:text-blue-600 prose-strong:text-gray-900 prose-code:bg-gray-100 prose-code:text-xs prose-code:px-1 prose-code:py-0.5 prose-code:rounded">
          <content.Content />
        </div>
      </div>
    )}

    </div>
  </div>
</Layout>
